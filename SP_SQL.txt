<connectionStrings>
    <add name="ConnectionString1" connectionString="Data Source=DESKTOP-GQ2BG5V;Initial Catalog=InventoryManagementSystem;
	User Id=sa;Password=1992;Persist Security Info=True;"
        providerName="System.Data.SqlClient" />
</connectionStrings>

string sqlConnString = ConfigurationManager.ConnectionStrings["ConnectionString1"].ConnectionString;
static string productId = string.Empty, Id = string.Empty;

//command pass
MySqlCommand Cmd1 = new MySqlCommand();
Cmd1.Connection = conn;
Cmd1.CommandText = "SP_Product_Stock_Return";
Cmd1.CommandType = CommandType.StoredProcedure;

//parameter pass
Cmd1.Parameters.Add("@VId", MySqlDbType.Int32).Value = 0;
Cmd1.Parameters.Add("@VSupplierId", MySqlDbType.Int32).Value = supplierDropDownList.SelectedValue;
Cmd1.Parameters.Add("@VName", MySqlDbType.VarChar).Value = supplierNameTextBox.Text;
Cmd1.Parameters.Add("@VMobile", MySqlDbType.VarChar).Value = mobileTextBox.Text;
Cmd1.Parameters.Add("@VAmmount", MySqlDbType.Decimal).Value = totalAmountTextBox.Text;
Cmd1.Parameters.Add("@VEntryDate", MySqlDbType.Date).Value = entryDateTextBox.Text;
Cmd1.Parameters.Add("@VInvoice", MySqlDbType.VarChar).Value = invoiceTextBox.Text;
Cmd1.Parameters.Add("@VUserId", MySqlDbType.Int32).Value = loginUID;

conn.Open();
Cmd1.ExecuteNonQuery();
conn.Close();

    protected void editButton_Click(object sender, EventArgs e)
    {
        Button editButton = (Button)sender;
        int eidtId = Convert.ToInt32(editButton.CommandArgument);

        using (MySqlConnection conn = new MySqlConnection(sqlConnString))
        {
            string query = "select * from medicine_stockreturn_details_temp where Id = '" + eidtId + "' ";
            MySqlCommand cmd = new MySqlCommand(query, conn);
            conn.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);
            conn.Close();

            if (dt.Rows.Count != 0)
            {
                Id = dt.Rows[0][0].ToString().Trim();
                productId = dt.Rows[0][1].ToString().Trim();
                productDropDownList.SelectedValue = dt.Rows[0][1].ToString().Trim();
                medicineNameTextBox.Text = dt.Rows[0][2].ToString().Trim();
                groupNameTextBox.Text = dt.Rows[0][3].ToString().Trim();
                manufacturerTextBox.Text = dt.Rows[0][4].ToString().Trim();
                quantityTextBox.Text = dt.Rows[0][5].ToString().Trim();
                unitPriceTextBox.Text = dt.Rows[0][6].ToString().Trim();
                amountTextBox.Text = dt.Rows[0][7].ToString().Trim();
            }
            saveButton.Visible = false;
            updateButton.Visible = true;
        }
    }



alter PROCEDURE [dbo].[SP_Product_Sales_1](
	@Id int = 0,
	@Name varchar (255) = '',
	@Mobile varchar (50) = '',
	@Address varchar (50) = '',
	@TotalAmmount decimal(18, 2) = 0,
	@Discount decimal(18, 2) = 0,
	@DiscountBalance decimal(18, 2) =0,
	@NetReceive decimal(18, 2) =0,
	@Invoice varchar (255) = '',
	@SalesDate date = null,
	@UserId int = 0
)
AS
BEGIN
	if(@Id = 0)
		begin
			INSERT INTO Product_Sales(Name, Mobile, Address, TotalAmmount, Discount, DiscountBalance, NetReceive, Invoice, SalesDate, UserUd)
			VALUES (@Name, @Mobile, @Address, @TotalAmmount, @Discount, @DiscountBalance, @NetReceive, @Invoice, @SalesDate, @UserId)
		end
	else if(@Id = 1)
		begin
			update Product_Sales set Name = @Name, Mobile = @Mobile, Address = @Address, 
			TotalAmmount = @TotalAmmount, Discount = @Discount, DiscountBalance = @DiscountBalance, 
			NetReceive = @NetReceive, Invoice = @Invoice, SalesDate = @SalesDate, UserUd = @UserId
			where Id = @Id
		end
	else if(@Id = 2)
		begin
			delete from Product_Sales where Id = @Id
		end
	else if (@Id = 3)
		begin
			select * from Product_Sales
		end
END



==========================================tigger=============================================================
USE [Test_DB]
GO
/****** Object:  Trigger [dbo].[InsertedDepartmentCoTable]    Script Date: 1/27/2021 8:14:10 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER TRIGGER [dbo].[InsertedDepartmentCoTable] on [dbo].[Department]
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	
	declare @Id int
	declare @Name varchar(100)
	declare @InsertedDateTime datetime
	declare @UpdatedDateTime datetime

	select @Name = i.Name from inserted i;

	set @InsertedDateTime =SYSDATETIME();
	set @UpdatedDateTime =SYSDATETIME();
	insert into DepartmentCo(Name, InsertedDateTime, UpdateDateTime) 
							values ('Mobile Name '+@Name+' Id '+ CAST(@Id as varchar(50)), @InsertedDateTime, @UpdatedDateTime)
    -- Insert statements for trigger here

END


====================================
alter TRIGGER [dbo].[UpdatedDepartmentTable] on [dbo].[Department]
   AFTER UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
	
	declare @Id int
	declare @UpdatedDateTime datetime

	select @Id = i.Id from deleted i;

	set @UpdatedDateTime =SYSDATETIME();
	insert into DepartmentCo(Name, InsertedDateTime, UpdateDateTime) 
							values ('Update Mobile Id '+ CAST(@Id as varchar(50)), GETDATE(), @UpdatedDateTime)
    -- Insert statements for trigger here

END

USE [Test_DB]
GO


/****** Object:  Trigger [dbo].[DeletedDepartmentTable]    Script Date: 1/27/2021 11:04:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER TRIGGER [dbo].[DeletedDepartmentTable] on [dbo].[Department]
   AFTER DELETE
AS 
BEGIN
	SET NOCOUNT ON;
	
	declare @Id int
	declare @UpdatedDateTime datetime

	select @Id = i.Id from deleted i;

	set @UpdatedDateTime =SYSDATETIME();
	insert into DepartmentCo(Name, InsertedDateTime, UpdateDateTime) 
							values ('Deleted Mobile Id '+ CAST(@Id as varchar(50)), GETDATE(), @UpdatedDateTime)
    -- Insert statements for trigger here

END


================================================sp insert===========================================

	public ActionResult Index()
        {
            List<Employee> employeeList = new List<Employee>();
            using (SqlConnection conn = new SqlConnection(SqlConnString))
            {
                string query = "select * from Employee";
                SqlCommand cmd = new SqlCommand(query, conn);
                conn.Open();
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                da.Fill(dt);
                conn.Close();

                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    Employee employee = new Employee();

                    employee.Id = Convert.ToInt32(dt.Rows[i][0].ToString().Trim());
                    employee.Name = dt.Rows[i][1].ToString().Trim();
                    employee.Phone = dt.Rows[i][2].ToString().Trim();
                    employee.Address = dt.Rows[i][3].ToString().Trim();

                    employeeList.Add(employee);
                }
                
            }
            return View(employeeList);
        }



	// POST: /Employee/Create
        [HttpPost]
        public ActionResult Create(Employee employee)
        {
            try
            {
                using (SqlConnection conn = new SqlConnection(SqlConnString))
                {
                    //command pass
                    SqlCommand Cmd1 = new SqlCommand();
                    Cmd1.Connection = conn;
                    Cmd1.CommandText = "SP_Employee";
                    Cmd1.CommandType = CommandType.StoredProcedure;

                    //parameter pass
                    Cmd1.Parameters.Add("@Id", SqlDbType.Int).Value = 0;
                    Cmd1.Parameters.Add("@Name", SqlDbType.VarChar).Value = employee.Name;
                    Cmd1.Parameters.Add("@Phone", SqlDbType.VarChar).Value = employee.Phone;
                    Cmd1.Parameters.Add("@Address", SqlDbType.VarChar).Value = employee.Address;

                    conn.Open();
                    Cmd1.ExecuteNonQuery();
                    conn.Close();
                }
                
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        //
        // GET: /Employee/Edit/5
        public ActionResult Edit(int id)
        {
            using (SqlConnection conn = new SqlConnection(SqlConnString))
            {
                string query = "select * from Employee where Id = '" + id + "'";
                SqlCommand cmd = new SqlCommand(query, conn);
                conn.Open();
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                da.Fill(dt);
                conn.Close();

                Employee employee = new Employee();
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    employee.Id = Convert.ToInt32(dt.Rows[i][0].ToString().Trim());
                    employee.Name = dt.Rows[i][1].ToString().Trim();
                    employee.Phone = dt.Rows[i][2].ToString().Trim();
                    employee.Address = dt.Rows[i][3].ToString().Trim();
                }

                return View(employee);
            }
        }

        //
        // POST: /Employee/Edit/5
        [HttpPost]
        public ActionResult Edit(Employee employee)
        {
            try
            {
                using (SqlConnection conn = new SqlConnection(SqlConnString))
                {
                    //command pass
                    SqlCommand Cmd1 = new SqlCommand();
                    Cmd1.Connection = conn;
                    Cmd1.CommandText = "SP_Employee";
                    Cmd1.CommandType = CommandType.StoredProcedure;

                    //parameter pass
                    Cmd1.Parameters.Add("@Id", SqlDbType.Int).Value = employee.Id;
                    Cmd1.Parameters.Add("@Name", SqlDbType.VarChar).Value = employee.Name;
                    Cmd1.Parameters.Add("@Phone", SqlDbType.VarChar).Value = employee.Phone;
                    Cmd1.Parameters.Add("@Address", SqlDbType.VarChar).Value = employee.Address;

                    conn.Open();
                    Cmd1.ExecuteNonQuery();
                    conn.Close();
                }

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }


=====================================================function multiple table ================================================

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION DepartmentDate
(
	@Id int = 0
)
RETURNS 
@MyDepartment TABLE 
(
	-- Add the column definitions for the TABLE variable here
	Id int,
	Name varchar(255)
)
AS
BEGIN
	insert into @MyDepartment
	select * from Department where Id = @Id

	RETURN 
END
GO

-----------------------------------------------------single line function--------------------------------

ALTER FUNCTION [dbo].[SingleDepartment] (@Id int)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	
	SELECT * from Department where Id = @id
)

-----------------------------------------------------single line function--------------------------------



-------------------------------------------------------scalar function --------------------------------------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[DepartmentName]
(
	-- Add the parameters for the function here
	@Id int
)
RETURNS varchar(255)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Name varchar(255)

	-- Add the T-SQL statements to compute the return value here
	SELECT @Name = Name from Department where Id = 15

	-- Return the result of the function
	RETURN @Name

END

-------------------------------------------------------scalar function --------------------------------------

/* call single and multiple table
	select * from DepartmentDate(15)
	select * from SingleDepartment(15)
	select [dbo].[DepartmentName](15)
*/

------------------------------------------------Reporting---------------------------------------------------------------
<button class="btn btn-primary" id="ManufacturerReports">Reports</button>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ManufacturerReports").click(function () {
                window.open(
                    "http://localhost:57653/Reports/Viewer/ManufacturerReports.aspx", "_blank"
                );
            });
        });
    </script>
}

<head runat="server">
    <title>Manufacturer Reports</title>
</head>
<body>
    <form id="form1" runat="server">
    <div>
        <rsweb:ReportViewer ID="ReportViewer1" runat="server"></rsweb:ReportViewer>
        <asp:ScriptManager ID="ScriptManager1" runat="server"></asp:ScriptManager>
    </div>
    </form>
</body>
</html>

	if (!IsPostBack)
            {
		//dataset theke dataadapter nite hbe
                SP_ManufacturerTableAdapter tableAdapter = new SP_ManufacturerTableAdapter();
                DataTable dataTable = tableAdapter.GetData();
                ReportDataSource dataSource = new ReportDataSource("ManufacturerDataSet", dataTable);
                
                ReportViewer1.LocalReport.ReportPath = "Reports/Design/ManufacturerReports.rdlc";

                ReportViewer1.LocalReport.EnableExternalImages = true;
                ReportViewer1.LocalReport.DataSources.Clear();
                ReportViewer1.LocalReport.DataSources.Add(dataSource);
                ReportViewer1.LocalReport.Refresh();

            }
